<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on mo0oom - Han&#39;s blog</title>
    <link>https://mo0om.com/post/</link>
    <description>Recent content in Posts on mo0oom - Han&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Feb 2021 04:07:46 +0900</lastBuildDate><atom:link href="https://mo0om.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>packets on k8s networks</title>
      <link>https://mo0om.com/2021/packets-on-k8s-networks/</link>
      <pubDate>Sun, 28 Feb 2021 04:07:46 +0900</pubDate>
      
      <guid>https://mo0om.com/2021/packets-on-k8s-networks/</guid>
      <description>들어가며 예전부터 k8s 안에서 패킷이 어떻게 움직이는지 진짜 궁금했었습니다. 그러던 중 훌륭하게 개념을 설명하는 유튜브를 찾았는데, 이를 공부하면서 정리를 해봤습니다. 대충 이해한거라 틀린 내용이 있을 수도 있습니다. 네트웍을 잘 몰라서 이해한대로 썼는데 언제나 그렇듯 더블체크는 늘 필요합니다.
Life of Packet   정리 network 기술 소개 - 모든 POD 은 k8s 안에서 통신가능한 진짜 IP 를 가진다. 도커와 같이 포트매핑을 하는 방식을 사용하지 않는다. - POD IP 는 다른 POD 에서 접근가능한 진짜 아이피다.</description>
    </item>
    
    <item>
      <title>GH-Pages with HUGO</title>
      <link>https://mo0om.com/2021/gh-pages-with-hugo/</link>
      <pubDate>Fri, 19 Feb 2021 10:42:46 +0900</pubDate>
      
      <guid>https://mo0om.com/2021/gh-pages-with-hugo/</guid>
      <description>원래 기록을 잘 하고 지식을 잘 정리하는 스타일은 아닙니다만, 어느덧 새로운 지식을 익히는 속도보다 그것을 잊는 속도가 빨라져버린 나이가 되어버려 무언가 정리할 공간이 필요하다는 생각이 들었습니다. 그래서 예전에 처박아놓고 관리안했던 github page 를 고쳐서 사용해보기로 결심했고, 하루 정도 시간을 투자해서 걸려서 이 사이트를 만들었습니다.
과거에 만들어봤던 github page 는 Jeykyll 의 오랜 빌드타임과 잘 모르는 ruby, 테마에서 사용하는 javascript, 그리고 의존성, 가끔 github 에서 보내는 보안경고등에 질려서 과감히 Jekyll 을 버리고 HUGO 를 선택하게 되었습니다.</description>
    </item>
    
    <item>
      <title>MemoryContext concepts in PostgreSQL</title>
      <link>https://mo0om.com/2018/memorycontext-concepts-in-postgresql/</link>
      <pubDate>Sat, 19 May 2018 01:42:46 +0900</pubDate>
      
      <guid>https://mo0om.com/2018/memorycontext-concepts-in-postgresql/</guid>
      <description>배경 메모리 관리는 여러운 작업중에 하나입니다. 메모리를 할당하고 사용하는 것은 좋은데 할당받은 메모리 포인터를 적시에 반환하지 않거나 놓쳐버리는 경우 흔히 말하는 메모리 릭이 발생하게 됩니다. 이러한 문제는 간단한 커멘드라인 유틸리티등과 같이 짧은 시간 동작하고 종료되는 경우는 그리 큰 문제가 되지 않습니다. OS 가 알아서 프로세스가 종료될때 할당받은 자원을 정리하여 주거든요. 그러나 데이터베이스 서버와 같이 오랜시간 데몬 형태로 동작하여야하는 경우는 메모리를 다 잡아먹고 시스템을 서비스 불능 상태로 만들어버리는 등의 심각한 문제를 일으킬수 있습니다.</description>
    </item>
    
    <item>
      <title>PostgreSQL Hooks</title>
      <link>https://mo0om.com/2018/postgresql-hooks/</link>
      <pubDate>Mon, 19 Feb 2018 11:43:46 +0900</pubDate>
      
      <guid>https://mo0om.com/2018/postgresql-hooks/</guid>
      <description>들어가며 PostgreSQL 은 Hook 이라는 아주 멋진 기능을 제공합니다. 본 글은 PostgreSQL 에서 제공하는 Hook 의 기본 개념과 동작방식에 대해서 소개합니다.
Hook Hook 은 일종의 Function Pointer 로써, 각각의 모듈별로 정의되어 있습니다. PostgreSQL 개발자들은 기능을 확장할 수 있도록 여러가지 Hook 등을 정의해놓았고, 여기에 내가 만든 코드를 넣어 손쉽게 PostgreSQL 의 동작을 변경하거나, 내가 필요한 코드를 추가로 넣어 기능을 확장 시킬 수 있습니다.
이러한 Hook 들은 PostgreSQL 의 _hook 접미사를 가진 전역변수로 정의되어있는데, 사실 제대로 Document 되어있지는 않습니다.</description>
    </item>
    
  </channel>
</rss>
