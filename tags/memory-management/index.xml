<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>memory management on mo0oom - Han&#39;s blog</title>
    <link>https://mo0om.com/tags/memory-management/</link>
    <description>Recent content in memory management on mo0oom - Han&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 May 2018 01:42:46 +0900</lastBuildDate><atom:link href="https://mo0om.com/tags/memory-management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MemoryContext concepts in PostgreSQL</title>
      <link>https://mo0om.com/2018/memorycontext-concepts-in-postgresql/</link>
      <pubDate>Sat, 19 May 2018 01:42:46 +0900</pubDate>
      
      <guid>https://mo0om.com/2018/memorycontext-concepts-in-postgresql/</guid>
      <description>배경 메모리 관리는 여러운 작업중에 하나입니다. 메모리를 할당하고 사용하는 것은 좋은데 할당받은 메모리 포인터를 적시에 반환하지 않거나 놓쳐버리는 경우 흔히 말하는 메모리 릭이 발생하게 됩니다. 이러한 문제는 간단한 커멘드라인 유틸리티등과 같이 짧은 시간 동작하고 종료되는 경우는 그리 큰 문제가 되지 않습니다. OS 가 알아서 프로세스가 종료될때 할당받은 자원을 정리하여 주거든요. 그러나 데이터베이스 서버와 같이 오랜시간 데몬 형태로 동작하여야하는 경우는 메모리를 다 잡아먹고 시스템을 서비스 불능 상태로 만들어버리는 등의 심각한 문제를 일으킬수 있습니다.</description>
    </item>
    
  </channel>
</rss>
